import copy

pure_1 = [
    [[3, 2], [1, 1], [4, 5]],
    [[5, 2], [4, 3], [1, 5]],
    [[3, 1], [3, 2], [2, 4]]
]

pure_2 = [
    [[3, 1], [4, 3], [5, 4]],
    [[4, 2], [3, 4], [2, 2]],
    [[2, 3], [4, 1], [3, 3]]
]

pure_3 = [
    [[3, 10], [4, 3], [5, 4]],
    [[4, 6], [3, 4], [2, 2]],
    [[2, 5], [4, 1], [3, 3]]
]

mixed_1 = [
    [[6, 3], [3, 1], [4, 5]],
    [[5, 5], [8, 4], [3, 7]],
    [[4, 2], [6, 6], [7, 3]]
]

mixed_2 = [
    [[5, 4], [8, 3], [5, 9]],
    [[2, 7], [5, 2], [8, 4]],
    [[1, 3], [7, 3], [3, 2]]
]

mixed_3 = [
    [[5, 4], [9, 3], [5, 1]],
    [[4, 2], [3, 5], [4, 3]],
    [[8, 5], [7, 1], [3, 8]]
]


def get_R_matrix():
    # R["S1"][0][1][0]   means  P["to state S1"][action of player1][action of player2][reward of player1]
    R = {
        "S1": copy.deepcopy(mixed_1),
        "S2": copy.deepcopy(mixed_2),
        "S3": copy.deepcopy(mixed_3)
    }
    return R


# def get_payoff_type():
#     # pure / mixed
#     payoff_type = {
#         "S1": "pure",
#         "S2": "pure",
#         "S3": "mixed"
#     }
#     return payoff_type


# def get_payoff_possibilities():
#     possibilities = {
#         "S1": {"p1": 1, "p2": 0, "p3": 0, "q1": 0, "q2": 0, "q3": 1},
#         "S2": {"p1": 0, "p2": 1, "p3": 0, "q1": 1, "q2": 0, "q3": 0}
#     }
#     return possibilities


def get_P_matrix():
    # P["S1"][0][1]["S2"]   means    P["from state S1"][action of player1][action of player2][to state "S2"]
    P = {
        "S1": [
            [{"S1": 0.4, "S2": 0.4, "S3": 0.2}, {"S1": 0.3, "S2": 0.5, "S3": 0.2}, {"S1": 0.6, "S2": 0.2, "S3": 0.2}],
            [{"S1": 0.6, "S2": 0.2, "S3": 0.2}, {"S1": 0.1, "S2": 0.3, "S3": 0.6}, {"S1": 0.6, "S2": 0.3, "S3": 0.1}],
            [{"S1": 0.5, "S2": 0.4, "S3": 0.1}, {"S1": 0.7, "S2": 0.2, "S3": 0.1}, {"S1": 0.1, "S2": 0.3, "S3": 0.6}]
        ],
        "S2": [
            [{"S1": 0.1, "S2": 0.1, "S3": 0.8}, {"S1": 0.2, "S2": 0.4, "S3": 0.4}, {"S1": 0.5, "S2": 0.1, "S3": 0.4}],
            [{"S1": 0.4, "S2": 0.1, "S3": 0.5}, {"S1": 0.3, "S2": 0.5, "S3": 0.2}, {"S1": 0.1, "S2": 0.4, "S3": 0.5}],
            [{"S1": 0.2, "S2": 0.2, "S3": 0.6}, {"S1": 0.4, "S2": 0.2, "S3": 0.4}, {"S1": 0.3, "S2": 0.2, "S3": 0.5}]
        ],
        "S3": [
            [{"S1": 0.8, "S2": 0.1, "S3": 0.1}, {"S1": 0.4, "S2": 0.4, "S3": 0.2}, {"S1": 0.5, "S2": 0.4, "S3": 0.1}],
            [{"S1": 0.6, "S2": 0.2, "S3": 0.2}, {"S1": 0.1, "S2": 0.3, "S3": 0.6}, {"S1": 0.6, "S2": 0.3, "S3": 0.1}],
            [{"S1": 0.2, "S2": 0.2, "S3": 0.6}, {"S1": 0.4, "S2": 0.2, "S3": 0.4}, {"S1": 0.3, "S2": 0.2, "S3": 0.5}]
        ]
    }
    return P


def get_init_possibility():
    possibility = {
        "S1": {"p1": 0.33333, "p2": 0.33333, "p3": 0.33333, "q1": 0.33333, "q2": 0.33333, "q3": 0.33333},
        "S2": {"p1": 0.33333, "p2": 0.33333, "p3": 0.33333, "q1": 0.33333, "q2": 0.33333, "q3": 0.33333},
        "S3": {"p1": 0.33333, "p2": 0.33333, "p3": 0.33333, "q1": 0.33333, "q2": 0.33333, "q3": 0.33333}
    }
    return possibility


# def get_init_possibility_history_matrix():
#     possibility_history = {
#         "S1": {},
#         "S2": {},
#         "S3": {}
#     }
#     return possibility_history


def get_v_matrix():
    v_matrix = {
        "S1": [],
        "S2": [],
        "S3": []
    }
    return v_matrix
